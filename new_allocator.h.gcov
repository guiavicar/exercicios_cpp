        -:    0:Source:/usr/include/c++/9/ext/new_allocator.h
        -:    1:// Allocator that wraps operator new -*- C++ -*-
        -:    2:
        -:    3:// Copyright (C) 2001-2019 Free Software Foundation, Inc.
        -:    4://
        -:    5:// This file is part of the GNU ISO C++ Library.  This library is free
        -:    6:// software; you can redistribute it and/or modify it under the
        -:    7:// terms of the GNU General Public License as published by the
        -:    8:// Free Software Foundation; either version 3, or (at your option)
        -:    9:// any later version.
        -:   10:
        -:   11:// This library is distributed in the hope that it will be useful,
        -:   12:// but WITHOUT ANY WARRANTY; without even the implied warranty of
        -:   13:// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        -:   14:// GNU General Public License for more details.
        -:   15:
        -:   16:// Under Section 7 of GPL version 3, you are granted additional
        -:   17:// permissions described in the GCC Runtime Library Exception, version
        -:   18:// 3.1, as published by the Free Software Foundation.
        -:   19:
        -:   20:// You should have received a copy of the GNU General Public License and
        -:   21:// a copy of the GCC Runtime Library Exception along with this program;
        -:   22:// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
        -:   23:// <http://www.gnu.org/licenses/>.
        -:   24:
        -:   25:/** @file ext/new_allocator.h
        -:   26: *  This file is a GNU extension to the Standard C++ Library.
        -:   27: */
        -:   28:
        -:   29:#ifndef _NEW_ALLOCATOR_H
        -:   30:#define _NEW_ALLOCATOR_H 1
        -:   31:
        -:   32:#include <bits/c++config.h>
        -:   33:#include <new>
        -:   34:#include <bits/functexcept.h>
        -:   35:#include <bits/move.h>
        -:   36:#if __cplusplus >= 201103L
        -:   37:#include <type_traits>
        -:   38:#endif
        -:   39:
        -:   40:namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
        -:   41:{
        -:   42:_GLIBCXX_BEGIN_NAMESPACE_VERSION
        -:   43:
        -:   44:  using std::size_t;
        -:   45:  using std::ptrdiff_t;
        -:   46:
        -:   47:  /**
        -:   48:   *  @brief  An allocator that uses global new, as per [20.4].
        -:   49:   *  @ingroup allocators
        -:   50:   *
        -:   51:   *  This is precisely the allocator defined in the C++ Standard.
        -:   52:   *    - all allocation calls operator new
        -:   53:   *    - all deallocation calls operator delete
        -:   54:   *
        -:   55:   *  @tparam  _Tp  Type of allocated object.
        -:   56:   */
        -:   57:  template<typename _Tp>
        -:   58:    class new_allocator
        -:   59:    {
        -:   60:    public:
        -:   61:      typedef size_t     size_type;
        -:   62:      typedef ptrdiff_t  difference_type;
        -:   63:      typedef _Tp*       pointer;
        -:   64:      typedef const _Tp* const_pointer;
        -:   65:      typedef _Tp&       reference;
        -:   66:      typedef const _Tp& const_reference;
        -:   67:      typedef _Tp        value_type;
        -:   68:
        -:   69:      template<typename _Tp1>
        -:   70:	struct rebind
        -:   71:	{ typedef new_allocator<_Tp1> other; };
        -:   72:
        -:   73:#if __cplusplus >= 201103L
        -:   74:      // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:   75:      // 2103. propagate_on_container_move_assignment
        -:   76:      typedef std::true_type propagate_on_container_move_assignment;
        -:   77:#endif
        -:   78:
        -:   79:      _GLIBCXX20_CONSTEXPR
      75*:   80:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN5Catch7TagInfoEEEEC2Ev:
    #####:   80:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN5Catch3PtrINSA_16IReporterFactoryEEEEEEC2Ev:
        1:   80:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch8TestCaseEEC2Ev:
        2:   80:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5Catch8TestCaseEEEC2Ev:
        1:   80:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch5Clara6Parser5TokenEEC2Ev:
        5:   80:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIPN5Catch16TestCaseTracking8ITrackerEEC2Ev:
        1:   80:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch14SectionEndInfoEEC2Ev:
        1:   80:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch11MessageInfoEEC2Ev:
        1:   80:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch3PtrINS1_16TestCaseTracking8ITrackerEEEEC2Ev:
        8:   80:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch3PtrINS1_16IReporterFactoryEEEEC2Ev:
        1:   80:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC2Ev:
        3:   80:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch8TestSpec6FilterEEC2Ev:
        2:   80:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch3PtrINS1_8TestSpec7PatternEEEEC2Ev:
        2:   80:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorImEC2Ev:
        1:   80:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIwEC2Ev:
    #####:   80:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2Ev:
       40:   80:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIcEC2Ev:
    #####:   80:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch11SectionInfoEEC2Ev:
        1:   80:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch5Clara11CommandLineINS1_10ConfigDataEE3ArgEEC2Ev:
        1:   80:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch15ConsoleReporter13SummaryColumnEEC2Ev:
    #####:   80:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch3PtrINS1_22CumulativeReporterBase4NodeINS1_12TestRunStatsENS4_INS1_14TestGroupStatsENS4_INS1_13TestCaseStatsENS3_11SectionNodeEEEEEEEEEEC2Ev:
    #####:   80:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch3PtrINS1_22CumulativeReporterBase4NodeINS1_14TestGroupStatsENS4_INS1_13TestCaseStatsENS3_11SectionNodeEEEEEEEEC2Ev:
    #####:   80:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch3PtrINS1_22CumulativeReporterBase4NodeINS1_13TestCaseStatsENS3_11SectionNodeEEEEEEC2Ev:
    #####:   80:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt6vectorIN5Catch3PtrINS2_22CumulativeReporterBase11SectionNodeEEESaIS6_EEEC2Ev:
    #####:   80:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch14AssertionStatsEEC2Ev:
    #####:   80:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch3PtrINS1_22CumulativeReporterBase11SectionNodeEEEEC2Ev:
    #####:   80:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiN5Catch5Clara11CommandLineINS4_10ConfigDataEE3ArgEEEEC2Ev:
        1:   80:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch3PtrINS1_18IStreamingReporterEEEEC2Ev:
    #####:   80:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIPKN5Catch8Matchers4Impl11MatcherBaseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESA_EEEC2Ev:
    #####:   80:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIPN5Catch14IGeneratorInfoEEC2Ev:
    #####:   80:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN5Catch14IGeneratorInfoEEEEC2Ev:
    #####:   80:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN5Catch18IGeneratorsForTestEEEEC2Ev:
        1:   80:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN5Catch8TagAliasEEEEC2Ev:
        1:   80:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIPKN5Catch20IExceptionTranslatorEEC2Ev:
        1:   80:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
        -:   81:
        -:   82:      _GLIBCXX20_CONSTEXPR
     137*:   83:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch3PtrINS1_8TestSpec7PatternEEEEC2ERKS6_:
        6:   83:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch5Clara6Parser5TokenEEC2ERKS5_:
        7:   83:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch3PtrINS1_16IReporterFactoryEEEEC2ERKS5_:
        2:   83:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC2ERKS9_:
       14:   83:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch11MessageInfoEEC2ERKS3_:
    #####:   83:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch8TestCaseEEC2ERKS3_:
        4:   83:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ERKS7_:
       98:   83:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIcEC2ERKS1_:
    #####:   83:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch8TestSpec6FilterEEC2ERKS4_:
        6:   83:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
        -:   84:
        -:   85:      template<typename _Tp1>
        -:   86:	_GLIBCXX20_CONSTEXPR
        -:   87:	new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
        -:   88:
     212*:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN5Catch7TagInfoEEEED2Ev:
    #####:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch3PtrINS1_16IReporterFactoryEEEED2Ev:
        3:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN5Catch3PtrINSA_16IReporterFactoryEEEEEED2Ev:
        1:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5Catch8TestCaseEEED2Ev:
        1:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch5Clara6Parser5TokenEED2Ev:
       12:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIPN5Catch16TestCaseTracking8ITrackerEED2Ev:
        1:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch14SectionEndInfoEED2Ev:
        1:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch11MessageInfoEED2Ev:
        1:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch3PtrINS1_16TestCaseTracking8ITrackerEEEED2Ev:
        8:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIPKN5Catch20IExceptionTranslatorEED2Ev:
        1:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev:
       17:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch8TestCaseEED2Ev:
        6:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev:
      138:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch8TestSpec6FilterEED2Ev:
        8:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch3PtrINS1_8TestSpec7PatternEEEED2Ev:
        8:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorImED2Ev:
        1:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIcED2Ev:
    #####:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch11SectionInfoEED2Ev:
        1:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch5Clara11CommandLineINS1_10ConfigDataEE3ArgEED2Ev:
        1:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch15ConsoleReporter13SummaryColumnEED2Ev:
    #####:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch3PtrINS1_22CumulativeReporterBase4NodeINS1_12TestRunStatsENS4_INS1_14TestGroupStatsENS4_INS1_13TestCaseStatsENS3_11SectionNodeEEEEEEEEEED2Ev:
    #####:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch3PtrINS1_22CumulativeReporterBase4NodeINS1_14TestGroupStatsENS4_INS1_13TestCaseStatsENS3_11SectionNodeEEEEEEEED2Ev:
    #####:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch3PtrINS1_22CumulativeReporterBase4NodeINS1_13TestCaseStatsENS3_11SectionNodeEEEEEED2Ev:
    #####:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt6vectorIN5Catch3PtrINS2_22CumulativeReporterBase11SectionNodeEEESaIS6_EEED2Ev:
    #####:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch14AssertionStatsEED2Ev:
    #####:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch3PtrINS1_22CumulativeReporterBase11SectionNodeEEEED2Ev:
    #####:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiN5Catch5Clara11CommandLineINS4_10ConfigDataEE3ArgEEEED2Ev:
        1:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch3PtrINS1_18IStreamingReporterEEEED2Ev:
    #####:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIPKN5Catch8Matchers4Impl11MatcherBaseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESA_EEED2Ev:
    #####:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIwED2Ev:
    #####:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIPN5Catch14IGeneratorInfoEED2Ev:
    #####:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN5Catch14IGeneratorInfoEEEED2Ev:
    #####:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN5Catch18IGeneratorsForTestEEEED2Ev:
        1:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN5Catch8TagAliasEEEED2Ev:
        1:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
        -:   90:
        -:   91:      pointer
        -:   92:      address(reference __x) const _GLIBCXX_NOEXCEPT
        -:   93:      { return std::__addressof(__x); }
        -:   94:
        -:   95:      const_pointer
        -:   96:      address(const_reference __x) const _GLIBCXX_NOEXCEPT
        -:   97:      { return std::__addressof(__x); }
        -:   98:
        -:   99:      // NB: __n is permitted to be 0.  The C++ standard says nothing
        -:  100:      // about what the return value is when __n == 0.
        -:  101:      _GLIBCXX_NODISCARD pointer
      94*:  102:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  103:      {
      94*:  104:	if (__n > this->max_size())
    #####:  105:	  std::__throw_bad_alloc();
        -:  106:
        -:  107:#if __cpp_aligned_new
        -:  108:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  109:	  {
        -:  110:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  111:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  112:	  }
        -:  113:#endif
      94*:  114:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        -:  115:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch3PtrINS1_22CumulativeReporterBase4NodeINS1_13TestCaseStatsENS3_11SectionNodeEEEEEE8allocateEmPKv:
    #####:  102:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  103:      {
    #####:  104:	if (__n > this->max_size())
    #####:  105:	  std::__throw_bad_alloc();
        -:  106:
        -:  107:#if __cpp_aligned_new
        -:  108:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  109:	  {
        -:  110:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  111:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  112:	  }
        -:  113:#endif
    #####:  114:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        -:  115:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch8TestCaseEE8allocateEmPKv:
        2:  102:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  103:      {
        2:  104:	if (__n > this->max_size())
    #####:  105:	  std::__throw_bad_alloc();
        -:  106:
        -:  107:#if __cpp_aligned_new
        -:  108:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  109:	  {
        -:  110:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  111:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  112:	  }
        -:  113:#endif
        2:  114:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        -:  115:      }
------------------
_ZN9__gnu_cxx13new_allocatorImE8allocateEmPKv:
    #####:  102:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  103:      {
    #####:  104:	if (__n > this->max_size())
    #####:  105:	  std::__throw_bad_alloc();
        -:  106:
        -:  107:#if __cpp_aligned_new
        -:  108:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  109:	  {
        -:  110:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  111:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  112:	  }
        -:  113:#endif
    #####:  114:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        -:  115:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch8TestSpec6FilterEE8allocateEmPKv:
        2:  102:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  103:      {
        2:  104:	if (__n > this->max_size())
    #####:  105:	  std::__throw_bad_alloc();
        -:  106:
        -:  107:#if __cpp_aligned_new
        -:  108:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  109:	  {
        -:  110:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  111:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  112:	  }
        -:  113:#endif
        2:  114:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        -:  115:      }
------------------
_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv:
       51:  102:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  103:      {
       51:  104:	if (__n > this->max_size())
    #####:  105:	  std::__throw_bad_alloc();
        -:  106:
        -:  107:#if __cpp_aligned_new
        -:  108:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  109:	  {
        -:  110:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  111:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  112:	  }
        -:  113:#endif
       51:  114:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        -:  115:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch11MessageInfoEE8allocateEmPKv:
    #####:  102:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  103:      {
    #####:  104:	if (__n > this->max_size())
    #####:  105:	  std::__throw_bad_alloc();
        -:  106:
        -:  107:#if __cpp_aligned_new
        -:  108:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  109:	  {
        -:  110:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  111:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  112:	  }
        -:  113:#endif
    #####:  114:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        -:  115:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch3PtrINS1_16TestCaseTracking8ITrackerEEEE8allocateEmPKv:
        5:  102:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  103:      {
        5:  104:	if (__n > this->max_size())
    #####:  105:	  std::__throw_bad_alloc();
        -:  106:
        -:  107:#if __cpp_aligned_new
        -:  108:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  109:	  {
        -:  110:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  111:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  112:	  }
        -:  113:#endif
        5:  114:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        -:  115:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch14SectionEndInfoEE8allocateEmPKv:
    #####:  102:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  103:      {
    #####:  104:	if (__n > this->max_size())
    #####:  105:	  std::__throw_bad_alloc();
        -:  106:
        -:  107:#if __cpp_aligned_new
        -:  108:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  109:	  {
        -:  110:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  111:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  112:	  }
        -:  113:#endif
    #####:  114:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        -:  115:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch3PtrINS1_16IReporterFactoryEEEE8allocateEmPKv:
    #####:  102:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  103:      {
    #####:  104:	if (__n > this->max_size())
    #####:  105:	  std::__throw_bad_alloc();
        -:  106:
        -:  107:#if __cpp_aligned_new
        -:  108:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  109:	  {
        -:  110:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  111:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  112:	  }
        -:  113:#endif
    #####:  114:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        -:  115:      }
------------------
_ZN9__gnu_cxx13new_allocatorIPKN5Catch20IExceptionTranslatorEE8allocateEmPKv:
    #####:  102:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  103:      {
    #####:  104:	if (__n > this->max_size())
    #####:  105:	  std::__throw_bad_alloc();
        -:  106:
        -:  107:#if __cpp_aligned_new
        -:  108:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  109:	  {
        -:  110:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  111:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  112:	  }
        -:  113:#endif
    #####:  114:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        -:  115:      }
------------------
_ZN9__gnu_cxx13new_allocatorIPN5Catch14IGeneratorInfoEE8allocateEmPKv:
    #####:  102:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  103:      {
    #####:  104:	if (__n > this->max_size())
    #####:  105:	  std::__throw_bad_alloc();
        -:  106:
        -:  107:#if __cpp_aligned_new
        -:  108:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  109:	  {
        -:  110:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  111:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  112:	  }
        -:  113:#endif
    #####:  114:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        -:  115:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch3PtrINS1_18IStreamingReporterEEEE8allocateEmPKv:
    #####:  102:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  103:      {
    #####:  104:	if (__n > this->max_size())
    #####:  105:	  std::__throw_bad_alloc();
        -:  106:
        -:  107:#if __cpp_aligned_new
        -:  108:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  109:	  {
        -:  110:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  111:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  112:	  }
        -:  113:#endif
    #####:  114:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        -:  115:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch11SectionInfoEE8allocateEmPKv:
        2:  102:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  103:      {
        2:  104:	if (__n > this->max_size())
    #####:  105:	  std::__throw_bad_alloc();
        -:  106:
        -:  107:#if __cpp_aligned_new
        -:  108:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  109:	  {
        -:  110:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  111:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  112:	  }
        -:  113:#endif
        2:  114:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        -:  115:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch3PtrINS1_22CumulativeReporterBase11SectionNodeEEEE8allocateEmPKv:
    #####:  102:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  103:      {
    #####:  104:	if (__n > this->max_size())
    #####:  105:	  std::__throw_bad_alloc();
        -:  106:
        -:  107:#if __cpp_aligned_new
        -:  108:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  109:	  {
        -:  110:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  111:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  112:	  }
        -:  113:#endif
    #####:  114:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        -:  115:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch14AssertionStatsEE8allocateEmPKv:
    #####:  102:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  103:      {
    #####:  104:	if (__n > this->max_size())
    #####:  105:	  std::__throw_bad_alloc();
        -:  106:
        -:  107:#if __cpp_aligned_new
        -:  108:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  109:	  {
        -:  110:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  111:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  112:	  }
        -:  113:#endif
    #####:  114:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        -:  115:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5Catch8TestCaseEEE8allocateEmPKv:
        1:  102:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  103:      {
        1:  104:	if (__n > this->max_size())
    #####:  105:	  std::__throw_bad_alloc();
        -:  106:
        -:  107:#if __cpp_aligned_new
        -:  108:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  109:	  {
        -:  110:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  111:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  112:	  }
        -:  113:#endif
        1:  114:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        -:  115:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch3PtrINS1_22CumulativeReporterBase4NodeINS1_14TestGroupStatsENS4_INS1_13TestCaseStatsENS3_11SectionNodeEEEEEEEE8allocateEmPKv:
    #####:  102:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  103:      {
    #####:  104:	if (__n > this->max_size())
    #####:  105:	  std::__throw_bad_alloc();
        -:  106:
        -:  107:#if __cpp_aligned_new
        -:  108:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  109:	  {
        -:  110:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  111:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  112:	  }
        -:  113:#endif
    #####:  114:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        -:  115:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch3PtrINS1_22CumulativeReporterBase4NodeINS1_12TestRunStatsENS4_INS1_14TestGroupStatsENS4_INS1_13TestCaseStatsENS3_11SectionNodeEEEEEEEEEE8allocateEmPKv:
    #####:  102:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  103:      {
    #####:  104:	if (__n > this->max_size())
    #####:  105:	  std::__throw_bad_alloc();
        -:  106:
        -:  107:#if __cpp_aligned_new
        -:  108:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  109:	  {
        -:  110:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  111:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  112:	  }
        -:  113:#endif
    #####:  114:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        -:  115:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch3PtrINS1_8TestSpec7PatternEEEE8allocateEmPKv:
        3:  102:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  103:      {
        3:  104:	if (__n > this->max_size())
    #####:  105:	  std::__throw_bad_alloc();
        -:  106:
        -:  107:#if __cpp_aligned_new
        -:  108:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  109:	  {
        -:  110:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  111:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  112:	  }
        -:  113:#endif
        3:  114:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        -:  115:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch5Clara6Parser5TokenEE8allocateEmPKv:
    #####:  102:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  103:      {
    #####:  104:	if (__n > this->max_size())
    #####:  105:	  std::__throw_bad_alloc();
        -:  106:
        -:  107:#if __cpp_aligned_new
        -:  108:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  109:	  {
        -:  110:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  111:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  112:	  }
        -:  113:#endif
    #####:  114:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        -:  115:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN5Catch7TagInfoEEEE8allocateEmPKv:
    #####:  102:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  103:      {
    #####:  104:	if (__n > this->max_size())
    #####:  105:	  std::__throw_bad_alloc();
        -:  106:
        -:  107:#if __cpp_aligned_new
        -:  108:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  109:	  {
        -:  110:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  111:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  112:	  }
        -:  113:#endif
    #####:  114:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        -:  115:      }
------------------
_ZN9__gnu_cxx13new_allocatorIPN5Catch16TestCaseTracking8ITrackerEE8allocateEmPKv:
        1:  102:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  103:      {
        1:  104:	if (__n > this->max_size())
    #####:  105:	  std::__throw_bad_alloc();
        -:  106:
        -:  107:#if __cpp_aligned_new
        -:  108:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  109:	  {
        -:  110:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  111:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  112:	  }
        -:  113:#endif
        1:  114:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        -:  115:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN5Catch3PtrINSA_16IReporterFactoryEEEEEE8allocateEmPKv:
        4:  102:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  103:      {
        4:  104:	if (__n > this->max_size())
    #####:  105:	  std::__throw_bad_alloc();
        -:  106:
        -:  107:#if __cpp_aligned_new
        -:  108:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  109:	  {
        -:  110:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  111:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  112:	  }
        -:  113:#endif
        4:  114:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        -:  115:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN5Catch18IGeneratorsForTestEEEE8allocateEmPKv:
    #####:  102:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  103:      {
    #####:  104:	if (__n > this->max_size())
    #####:  105:	  std::__throw_bad_alloc();
        -:  106:
        -:  107:#if __cpp_aligned_new
        -:  108:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  109:	  {
        -:  110:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  111:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  112:	  }
        -:  113:#endif
    #####:  114:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        -:  115:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN5Catch14IGeneratorInfoEEEE8allocateEmPKv:
    #####:  102:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  103:      {
    #####:  104:	if (__n > this->max_size())
    #####:  105:	  std::__throw_bad_alloc();
        -:  106:
        -:  107:#if __cpp_aligned_new
        -:  108:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  109:	  {
        -:  110:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  111:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  112:	  }
        -:  113:#endif
    #####:  114:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        -:  115:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN5Catch8TagAliasEEEE8allocateEmPKv:
    #####:  102:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  103:      {
    #####:  104:	if (__n > this->max_size())
    #####:  105:	  std::__throw_bad_alloc();
        -:  106:
        -:  107:#if __cpp_aligned_new
        -:  108:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  109:	  {
        -:  110:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  111:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  112:	  }
        -:  113:#endif
    #####:  114:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        -:  115:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch15ConsoleReporter13SummaryColumnEE8allocateEmPKv:
    #####:  102:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  103:      {
    #####:  104:	if (__n > this->max_size())
    #####:  105:	  std::__throw_bad_alloc();
        -:  106:
        -:  107:#if __cpp_aligned_new
        -:  108:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  109:	  {
        -:  110:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  111:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  112:	  }
        -:  113:#endif
    #####:  114:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        -:  115:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch5Clara11CommandLineINS1_10ConfigDataEE3ArgEE8allocateEmPKv:
        6:  102:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  103:      {
        6:  104:	if (__n > this->max_size())
    #####:  105:	  std::__throw_bad_alloc();
        -:  106:
        -:  107:#if __cpp_aligned_new
        -:  108:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  109:	  {
        -:  110:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  111:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  112:	  }
        -:  113:#endif
        6:  114:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        -:  115:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateEmPKv:
       17:  102:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  103:      {
       17:  104:	if (__n > this->max_size())
    #####:  105:	  std::__throw_bad_alloc();
        -:  106:
        -:  107:#if __cpp_aligned_new
        -:  108:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  109:	  {
        -:  110:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  111:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  112:	  }
        -:  113:#endif
       17:  114:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        -:  115:      }
------------------
        -:  116:
        -:  117:      // __p is not permitted to be a null pointer.
        -:  118:      void
      94*:  119:      deallocate(pointer __p, size_type)
        -:  120:      {
        -:  121:#if __cpp_aligned_new
        -:  122:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  123:	  {
        -:  124:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  125:	    return;
        -:  126:	  }
        -:  127:#endif
      94*:  128:	::operator delete(__p);
      94*:  129:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch11SectionInfoEE10deallocateEPS2_m:
        2:  119:      deallocate(pointer __p, size_type)
        -:  120:      {
        -:  121:#if __cpp_aligned_new
        -:  122:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  123:	  {
        -:  124:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  125:	    return;
        -:  126:	  }
        -:  127:#endif
        2:  128:	::operator delete(__p);
        2:  129:      }
------------------
_ZN9__gnu_cxx13new_allocatorImE10deallocateEPmm:
    #####:  119:      deallocate(pointer __p, size_type)
        -:  120:      {
        -:  121:#if __cpp_aligned_new
        -:  122:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  123:	  {
        -:  124:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  125:	    return;
        -:  126:	  }
        -:  127:#endif
    #####:  128:	::operator delete(__p);
    #####:  129:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch3PtrINS1_8TestSpec7PatternEEEE10deallocateEPS5_m:
        3:  119:      deallocate(pointer __p, size_type)
        -:  120:      {
        -:  121:#if __cpp_aligned_new
        -:  122:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  123:	  {
        -:  124:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  125:	    return;
        -:  126:	  }
        -:  127:#endif
        3:  128:	::operator delete(__p);
        3:  129:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch8TestSpec6FilterEE10deallocateEPS3_m:
        2:  119:      deallocate(pointer __p, size_type)
        -:  120:      {
        -:  121:#if __cpp_aligned_new
        -:  122:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  123:	  {
        -:  124:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  125:	    return;
        -:  126:	  }
        -:  127:#endif
        2:  128:	::operator delete(__p);
        2:  129:      }
------------------
_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE10deallocateEPS6_m:
       51:  119:      deallocate(pointer __p, size_type)
        -:  120:      {
        -:  121:#if __cpp_aligned_new
        -:  122:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  123:	  {
        -:  124:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  125:	    return;
        -:  126:	  }
        -:  127:#endif
       51:  128:	::operator delete(__p);
       51:  129:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch8TestCaseEE10deallocateEPS2_m:
        2:  119:      deallocate(pointer __p, size_type)
        -:  120:      {
        -:  121:#if __cpp_aligned_new
        -:  122:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  123:	  {
        -:  124:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  125:	    return;
        -:  126:	  }
        -:  127:#endif
        2:  128:	::operator delete(__p);
        2:  129:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch3PtrINS1_16TestCaseTracking8ITrackerEEEE10deallocateEPS5_m:
        5:  119:      deallocate(pointer __p, size_type)
        -:  120:      {
        -:  121:#if __cpp_aligned_new
        -:  122:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  123:	  {
        -:  124:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  125:	    return;
        -:  126:	  }
        -:  127:#endif
        5:  128:	::operator delete(__p);
        5:  129:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch11MessageInfoEE10deallocateEPS2_m:
    #####:  119:      deallocate(pointer __p, size_type)
        -:  120:      {
        -:  121:#if __cpp_aligned_new
        -:  122:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  123:	  {
        -:  124:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  125:	    return;
        -:  126:	  }
        -:  127:#endif
    #####:  128:	::operator delete(__p);
    #####:  129:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch14SectionEndInfoEE10deallocateEPS2_m:
    #####:  119:      deallocate(pointer __p, size_type)
        -:  120:      {
        -:  121:#if __cpp_aligned_new
        -:  122:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  123:	  {
        -:  124:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  125:	    return;
        -:  126:	  }
        -:  127:#endif
    #####:  128:	::operator delete(__p);
    #####:  129:      }
------------------
_ZN9__gnu_cxx13new_allocatorIPN5Catch16TestCaseTracking8ITrackerEE10deallocateEPS4_m:
        1:  119:      deallocate(pointer __p, size_type)
        -:  120:      {
        -:  121:#if __cpp_aligned_new
        -:  122:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  123:	  {
        -:  124:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  125:	    return;
        -:  126:	  }
        -:  127:#endif
        1:  128:	::operator delete(__p);
        1:  129:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch5Clara6Parser5TokenEE10deallocateEPS4_m:
    #####:  119:      deallocate(pointer __p, size_type)
        -:  120:      {
        -:  121:#if __cpp_aligned_new
        -:  122:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  123:	  {
        -:  124:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  125:	    return;
        -:  126:	  }
        -:  127:#endif
    #####:  128:	::operator delete(__p);
    #####:  129:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch3PtrINS1_16IReporterFactoryEEEE10deallocateEPS4_m:
    #####:  119:      deallocate(pointer __p, size_type)
        -:  120:      {
        -:  121:#if __cpp_aligned_new
        -:  122:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  123:	  {
        -:  124:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  125:	    return;
        -:  126:	  }
        -:  127:#endif
    #####:  128:	::operator delete(__p);
    #####:  129:      }
------------------
_ZN9__gnu_cxx13new_allocatorIPKN5Catch20IExceptionTranslatorEE10deallocateEPS4_m:
    #####:  119:      deallocate(pointer __p, size_type)
        -:  120:      {
        -:  121:#if __cpp_aligned_new
        -:  122:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  123:	  {
        -:  124:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  125:	    return;
        -:  126:	  }
        -:  127:#endif
    #####:  128:	::operator delete(__p);
    #####:  129:      }
------------------
_ZN9__gnu_cxx13new_allocatorIPN5Catch14IGeneratorInfoEE10deallocateEPS3_m:
    #####:  119:      deallocate(pointer __p, size_type)
        -:  120:      {
        -:  121:#if __cpp_aligned_new
        -:  122:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  123:	  {
        -:  124:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  125:	    return;
        -:  126:	  }
        -:  127:#endif
    #####:  128:	::operator delete(__p);
    #####:  129:      }
------------------
_ZN9__gnu_cxx13new_allocatorIPKN5Catch8Matchers4Impl11MatcherBaseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESA_EEE10deallocateEPSD_m:
    #####:  119:      deallocate(pointer __p, size_type)
        -:  120:      {
        -:  121:#if __cpp_aligned_new
        -:  122:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  123:	  {
        -:  124:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  125:	    return;
        -:  126:	  }
        -:  127:#endif
    #####:  128:	::operator delete(__p);
    #####:  129:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch3PtrINS1_18IStreamingReporterEEEE10deallocateEPS4_m:
    #####:  119:      deallocate(pointer __p, size_type)
        -:  120:      {
        -:  121:#if __cpp_aligned_new
        -:  122:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  123:	  {
        -:  124:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  125:	    return;
        -:  126:	  }
        -:  127:#endif
    #####:  128:	::operator delete(__p);
    #####:  129:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN5Catch14IGeneratorInfoEEEE10deallocateEPSE_m:
    #####:  119:      deallocate(pointer __p, size_type)
        -:  120:      {
        -:  121:#if __cpp_aligned_new
        -:  122:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  123:	  {
        -:  124:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  125:	    return;
        -:  126:	  }
        -:  127:#endif
    #####:  128:	::operator delete(__p);
    #####:  129:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch3PtrINS1_22CumulativeReporterBase11SectionNodeEEEE10deallocateEPS5_m:
    #####:  119:      deallocate(pointer __p, size_type)
        -:  120:      {
        -:  121:#if __cpp_aligned_new
        -:  122:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  123:	  {
        -:  124:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  125:	    return;
        -:  126:	  }
        -:  127:#endif
    #####:  128:	::operator delete(__p);
    #####:  129:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch14AssertionStatsEE10deallocateEPS2_m:
    #####:  119:      deallocate(pointer __p, size_type)
        -:  120:      {
        -:  121:#if __cpp_aligned_new
        -:  122:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  123:	  {
        -:  124:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  125:	    return;
        -:  126:	  }
        -:  127:#endif
    #####:  128:	::operator delete(__p);
    #####:  129:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt6vectorIN5Catch3PtrINS2_22CumulativeReporterBase11SectionNodeEEESaIS6_EEE10deallocateEPS8_m:
    #####:  119:      deallocate(pointer __p, size_type)
        -:  120:      {
        -:  121:#if __cpp_aligned_new
        -:  122:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  123:	  {
        -:  124:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  125:	    return;
        -:  126:	  }
        -:  127:#endif
    #####:  128:	::operator delete(__p);
    #####:  129:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch3PtrINS1_22CumulativeReporterBase4NodeINS1_13TestCaseStatsENS3_11SectionNodeEEEEEE10deallocateEPS8_m:
    #####:  119:      deallocate(pointer __p, size_type)
        -:  120:      {
        -:  121:#if __cpp_aligned_new
        -:  122:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  123:	  {
        -:  124:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  125:	    return;
        -:  126:	  }
        -:  127:#endif
    #####:  128:	::operator delete(__p);
    #####:  129:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch3PtrINS1_22CumulativeReporterBase4NodeINS1_14TestGroupStatsENS4_INS1_13TestCaseStatsENS3_11SectionNodeEEEEEEEE10deallocateEPSA_m:
    #####:  119:      deallocate(pointer __p, size_type)
        -:  120:      {
        -:  121:#if __cpp_aligned_new
        -:  122:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  123:	  {
        -:  124:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  125:	    return;
        -:  126:	  }
        -:  127:#endif
    #####:  128:	::operator delete(__p);
    #####:  129:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch3PtrINS1_22CumulativeReporterBase4NodeINS1_12TestRunStatsENS4_INS1_14TestGroupStatsENS4_INS1_13TestCaseStatsENS3_11SectionNodeEEEEEEEEEE10deallocateEPSC_m:
    #####:  119:      deallocate(pointer __p, size_type)
        -:  120:      {
        -:  121:#if __cpp_aligned_new
        -:  122:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  123:	  {
        -:  124:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  125:	    return;
        -:  126:	  }
        -:  127:#endif
    #####:  128:	::operator delete(__p);
    #####:  129:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch15ConsoleReporter13SummaryColumnEE10deallocateEPS3_m:
    #####:  119:      deallocate(pointer __p, size_type)
        -:  120:      {
        -:  121:#if __cpp_aligned_new
        -:  122:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  123:	  {
        -:  124:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  125:	    return;
        -:  126:	  }
        -:  127:#endif
    #####:  128:	::operator delete(__p);
    #####:  129:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch5Clara11CommandLineINS1_10ConfigDataEE3ArgEE10deallocateEPS6_m:
        6:  119:      deallocate(pointer __p, size_type)
        -:  120:      {
        -:  121:#if __cpp_aligned_new
        -:  122:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  123:	  {
        -:  124:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  125:	    return;
        -:  126:	  }
        -:  127:#endif
        6:  128:	::operator delete(__p);
        6:  129:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiN5Catch5Clara11CommandLineINS4_10ConfigDataEE3ArgEEEE10deallocateEPSB_m:
    #####:  119:      deallocate(pointer __p, size_type)
        -:  120:      {
        -:  121:#if __cpp_aligned_new
        -:  122:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  123:	  {
        -:  124:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  125:	    return;
        -:  126:	  }
        -:  127:#endif
    #####:  128:	::operator delete(__p);
    #####:  129:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateEPS8_m:
       17:  119:      deallocate(pointer __p, size_type)
        -:  120:      {
        -:  121:#if __cpp_aligned_new
        -:  122:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  123:	  {
        -:  124:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  125:	    return;
        -:  126:	  }
        -:  127:#endif
       17:  128:	::operator delete(__p);
       17:  129:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN5Catch7TagInfoEEEE10deallocateEPSD_m:
    #####:  119:      deallocate(pointer __p, size_type)
        -:  120:      {
        -:  121:#if __cpp_aligned_new
        -:  122:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  123:	  {
        -:  124:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  125:	    return;
        -:  126:	  }
        -:  127:#endif
    #####:  128:	::operator delete(__p);
    #####:  129:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5Catch8TestCaseEEE10deallocateEPS4_m:
        1:  119:      deallocate(pointer __p, size_type)
        -:  120:      {
        -:  121:#if __cpp_aligned_new
        -:  122:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  123:	  {
        -:  124:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  125:	    return;
        -:  126:	  }
        -:  127:#endif
        1:  128:	::operator delete(__p);
        1:  129:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN5Catch3PtrINSA_16IReporterFactoryEEEEEE10deallocateEPSF_m:
        4:  119:      deallocate(pointer __p, size_type)
        -:  120:      {
        -:  121:#if __cpp_aligned_new
        -:  122:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  123:	  {
        -:  124:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  125:	    return;
        -:  126:	  }
        -:  127:#endif
        4:  128:	::operator delete(__p);
        4:  129:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN5Catch8TagAliasEEEE10deallocateEPSD_m:
    #####:  119:      deallocate(pointer __p, size_type)
        -:  120:      {
        -:  121:#if __cpp_aligned_new
        -:  122:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  123:	  {
        -:  124:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  125:	    return;
        -:  126:	  }
        -:  127:#endif
    #####:  128:	::operator delete(__p);
    #####:  129:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN5Catch18IGeneratorsForTestEEEE10deallocateEPSE_m:
    #####:  119:      deallocate(pointer __p, size_type)
        -:  120:      {
        -:  121:#if __cpp_aligned_new
        -:  122:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  123:	  {
        -:  124:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  125:	    return;
        -:  126:	  }
        -:  127:#endif
    #####:  128:	::operator delete(__p);
    #####:  129:      }
------------------
        -:  130:
        -:  131:      size_type
     167*:  132:      max_size() const _GLIBCXX_USE_NOEXCEPT
        -:  133:      {
        -:  134:#if __PTRDIFF_MAX__ < __SIZE_MAX__
     167*:  135:	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
        -:  136:#else
        -:  137:	return size_t(-1) / sizeof(_Tp);
        -:  138:#endif
        -:  139:      }
------------------
_ZNK9__gnu_cxx13new_allocatorIN5Catch3PtrINS1_22CumulativeReporterBase4NodeINS1_13TestCaseStatsENS3_11SectionNodeEEEEEE8max_sizeEv:
    #####:  132:      max_size() const _GLIBCXX_USE_NOEXCEPT
        -:  133:      {
        -:  134:#if __PTRDIFF_MAX__ < __SIZE_MAX__
    #####:  135:	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
        -:  136:#else
        -:  137:	return size_t(-1) / sizeof(_Tp);
        -:  138:#endif
        -:  139:      }
------------------
_ZNK9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8max_sizeEv:
       90:  132:      max_size() const _GLIBCXX_USE_NOEXCEPT
        -:  133:      {
        -:  134:#if __PTRDIFF_MAX__ < __SIZE_MAX__
       90:  135:	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
        -:  136:#else
        -:  137:	return size_t(-1) / sizeof(_Tp);
        -:  138:#endif
        -:  139:      }
------------------
_ZNK9__gnu_cxx13new_allocatorIN5Catch8TestCaseEE8max_sizeEv:
        4:  132:      max_size() const _GLIBCXX_USE_NOEXCEPT
        -:  133:      {
        -:  134:#if __PTRDIFF_MAX__ < __SIZE_MAX__
        4:  135:	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
        -:  136:#else
        -:  137:	return size_t(-1) / sizeof(_Tp);
        -:  138:#endif
        -:  139:      }
------------------
_ZNK9__gnu_cxx13new_allocatorImE8max_sizeEv:
    #####:  132:      max_size() const _GLIBCXX_USE_NOEXCEPT
        -:  133:      {
        -:  134:#if __PTRDIFF_MAX__ < __SIZE_MAX__
    #####:  135:	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
        -:  136:#else
        -:  137:	return size_t(-1) / sizeof(_Tp);
        -:  138:#endif
        -:  139:      }
------------------
_ZNK9__gnu_cxx13new_allocatorIN5Catch8TestSpec6FilterEE8max_sizeEv:
        4:  132:      max_size() const _GLIBCXX_USE_NOEXCEPT
        -:  133:      {
        -:  134:#if __PTRDIFF_MAX__ < __SIZE_MAX__
        4:  135:	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
        -:  136:#else
        -:  137:	return size_t(-1) / sizeof(_Tp);
        -:  138:#endif
        -:  139:      }
------------------
_ZNK9__gnu_cxx13new_allocatorIN5Catch11MessageInfoEE8max_sizeEv:
    #####:  132:      max_size() const _GLIBCXX_USE_NOEXCEPT
        -:  133:      {
        -:  134:#if __PTRDIFF_MAX__ < __SIZE_MAX__
    #####:  135:	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
        -:  136:#else
        -:  137:	return size_t(-1) / sizeof(_Tp);
        -:  138:#endif
        -:  139:      }
------------------
_ZNK9__gnu_cxx13new_allocatorIN5Catch3PtrINS1_16TestCaseTracking8ITrackerEEEE8max_sizeEv:
       15:  132:      max_size() const _GLIBCXX_USE_NOEXCEPT
        -:  133:      {
        -:  134:#if __PTRDIFF_MAX__ < __SIZE_MAX__
       15:  135:	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
        -:  136:#else
        -:  137:	return size_t(-1) / sizeof(_Tp);
        -:  138:#endif
        -:  139:      }
------------------
_ZNK9__gnu_cxx13new_allocatorIN5Catch14SectionEndInfoEE8max_sizeEv:
    #####:  132:      max_size() const _GLIBCXX_USE_NOEXCEPT
        -:  133:      {
        -:  134:#if __PTRDIFF_MAX__ < __SIZE_MAX__
    #####:  135:	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
        -:  136:#else
        -:  137:	return size_t(-1) / sizeof(_Tp);
        -:  138:#endif
        -:  139:      }
------------------
_ZNK9__gnu_cxx13new_allocatorIN5Catch3PtrINS1_16IReporterFactoryEEEE8max_sizeEv:
    #####:  132:      max_size() const _GLIBCXX_USE_NOEXCEPT
        -:  133:      {
        -:  134:#if __PTRDIFF_MAX__ < __SIZE_MAX__
    #####:  135:	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
        -:  136:#else
        -:  137:	return size_t(-1) / sizeof(_Tp);
        -:  138:#endif
        -:  139:      }
------------------
_ZNK9__gnu_cxx13new_allocatorIPKN5Catch20IExceptionTranslatorEE8max_sizeEv:
    #####:  132:      max_size() const _GLIBCXX_USE_NOEXCEPT
        -:  133:      {
        -:  134:#if __PTRDIFF_MAX__ < __SIZE_MAX__
    #####:  135:	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
        -:  136:#else
        -:  137:	return size_t(-1) / sizeof(_Tp);
        -:  138:#endif
        -:  139:      }
------------------
_ZNK9__gnu_cxx13new_allocatorIPN5Catch14IGeneratorInfoEE8max_sizeEv:
    #####:  132:      max_size() const _GLIBCXX_USE_NOEXCEPT
        -:  133:      {
        -:  134:#if __PTRDIFF_MAX__ < __SIZE_MAX__
    #####:  135:	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
        -:  136:#else
        -:  137:	return size_t(-1) / sizeof(_Tp);
        -:  138:#endif
        -:  139:      }
------------------
_ZNK9__gnu_cxx13new_allocatorIN5Catch3PtrINS1_18IStreamingReporterEEEE8max_sizeEv:
    #####:  132:      max_size() const _GLIBCXX_USE_NOEXCEPT
        -:  133:      {
        -:  134:#if __PTRDIFF_MAX__ < __SIZE_MAX__
    #####:  135:	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
        -:  136:#else
        -:  137:	return size_t(-1) / sizeof(_Tp);
        -:  138:#endif
        -:  139:      }
------------------
_ZNK9__gnu_cxx13new_allocatorIN5Catch11SectionInfoEE8max_sizeEv:
        6:  132:      max_size() const _GLIBCXX_USE_NOEXCEPT
        -:  133:      {
        -:  134:#if __PTRDIFF_MAX__ < __SIZE_MAX__
        6:  135:	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
        -:  136:#else
        -:  137:	return size_t(-1) / sizeof(_Tp);
        -:  138:#endif
        -:  139:      }
------------------
_ZNK9__gnu_cxx13new_allocatorIN5Catch3PtrINS1_22CumulativeReporterBase11SectionNodeEEEE8max_sizeEv:
    #####:  132:      max_size() const _GLIBCXX_USE_NOEXCEPT
        -:  133:      {
        -:  134:#if __PTRDIFF_MAX__ < __SIZE_MAX__
    #####:  135:	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
        -:  136:#else
        -:  137:	return size_t(-1) / sizeof(_Tp);
        -:  138:#endif
        -:  139:      }
------------------
_ZNK9__gnu_cxx13new_allocatorIN5Catch14AssertionStatsEE8max_sizeEv:
    #####:  132:      max_size() const _GLIBCXX_USE_NOEXCEPT
        -:  133:      {
        -:  134:#if __PTRDIFF_MAX__ < __SIZE_MAX__
    #####:  135:	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
        -:  136:#else
        -:  137:	return size_t(-1) / sizeof(_Tp);
        -:  138:#endif
        -:  139:      }
------------------
_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5Catch8TestCaseEEE8max_sizeEv:
        1:  132:      max_size() const _GLIBCXX_USE_NOEXCEPT
        -:  133:      {
        -:  134:#if __PTRDIFF_MAX__ < __SIZE_MAX__
        1:  135:	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
        -:  136:#else
        -:  137:	return size_t(-1) / sizeof(_Tp);
        -:  138:#endif
        -:  139:      }
------------------
_ZNK9__gnu_cxx13new_allocatorIN5Catch3PtrINS1_22CumulativeReporterBase4NodeINS1_14TestGroupStatsENS4_INS1_13TestCaseStatsENS3_11SectionNodeEEEEEEEE8max_sizeEv:
    #####:  132:      max_size() const _GLIBCXX_USE_NOEXCEPT
        -:  133:      {
        -:  134:#if __PTRDIFF_MAX__ < __SIZE_MAX__
    #####:  135:	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
        -:  136:#else
        -:  137:	return size_t(-1) / sizeof(_Tp);
        -:  138:#endif
        -:  139:      }
------------------
_ZNK9__gnu_cxx13new_allocatorIN5Catch3PtrINS1_22CumulativeReporterBase4NodeINS1_12TestRunStatsENS4_INS1_14TestGroupStatsENS4_INS1_13TestCaseStatsENS3_11SectionNodeEEEEEEEEEE8max_sizeEv:
    #####:  132:      max_size() const _GLIBCXX_USE_NOEXCEPT
        -:  133:      {
        -:  134:#if __PTRDIFF_MAX__ < __SIZE_MAX__
    #####:  135:	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
        -:  136:#else
        -:  137:	return size_t(-1) / sizeof(_Tp);
        -:  138:#endif
        -:  139:      }
------------------
_ZNK9__gnu_cxx13new_allocatorIN5Catch3PtrINS1_8TestSpec7PatternEEEE8max_sizeEv:
        5:  132:      max_size() const _GLIBCXX_USE_NOEXCEPT
        -:  133:      {
        -:  134:#if __PTRDIFF_MAX__ < __SIZE_MAX__
        5:  135:	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
        -:  136:#else
        -:  137:	return size_t(-1) / sizeof(_Tp);
        -:  138:#endif
        -:  139:      }
------------------
_ZNK9__gnu_cxx13new_allocatorIN5Catch5Clara6Parser5TokenEE8max_sizeEv:
    #####:  132:      max_size() const _GLIBCXX_USE_NOEXCEPT
        -:  133:      {
        -:  134:#if __PTRDIFF_MAX__ < __SIZE_MAX__
    #####:  135:	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
        -:  136:#else
        -:  137:	return size_t(-1) / sizeof(_Tp);
        -:  138:#endif
        -:  139:      }
------------------
_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN5Catch7TagInfoEEEE8max_sizeEv:
    #####:  132:      max_size() const _GLIBCXX_USE_NOEXCEPT
        -:  133:      {
        -:  134:#if __PTRDIFF_MAX__ < __SIZE_MAX__
    #####:  135:	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
        -:  136:#else
        -:  137:	return size_t(-1) / sizeof(_Tp);
        -:  138:#endif
        -:  139:      }
------------------
_ZNK9__gnu_cxx13new_allocatorIPN5Catch16TestCaseTracking8ITrackerEE8max_sizeEv:
        3:  132:      max_size() const _GLIBCXX_USE_NOEXCEPT
        -:  133:      {
        -:  134:#if __PTRDIFF_MAX__ < __SIZE_MAX__
        3:  135:	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
        -:  136:#else
        -:  137:	return size_t(-1) / sizeof(_Tp);
        -:  138:#endif
        -:  139:      }
------------------
_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN5Catch3PtrINSA_16IReporterFactoryEEEEEE8max_sizeEv:
        4:  132:      max_size() const _GLIBCXX_USE_NOEXCEPT
        -:  133:      {
        -:  134:#if __PTRDIFF_MAX__ < __SIZE_MAX__
        4:  135:	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
        -:  136:#else
        -:  137:	return size_t(-1) / sizeof(_Tp);
        -:  138:#endif
        -:  139:      }
------------------
_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN5Catch18IGeneratorsForTestEEEE8max_sizeEv:
    #####:  132:      max_size() const _GLIBCXX_USE_NOEXCEPT
        -:  133:      {
        -:  134:#if __PTRDIFF_MAX__ < __SIZE_MAX__
    #####:  135:	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
        -:  136:#else
        -:  137:	return size_t(-1) / sizeof(_Tp);
        -:  138:#endif
        -:  139:      }
------------------
_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN5Catch14IGeneratorInfoEEEE8max_sizeEv:
    #####:  132:      max_size() const _GLIBCXX_USE_NOEXCEPT
        -:  133:      {
        -:  134:#if __PTRDIFF_MAX__ < __SIZE_MAX__
    #####:  135:	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
        -:  136:#else
        -:  137:	return size_t(-1) / sizeof(_Tp);
        -:  138:#endif
        -:  139:      }
------------------
_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN5Catch8TagAliasEEEE8max_sizeEv:
    #####:  132:      max_size() const _GLIBCXX_USE_NOEXCEPT
        -:  133:      {
        -:  134:#if __PTRDIFF_MAX__ < __SIZE_MAX__
    #####:  135:	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
        -:  136:#else
        -:  137:	return size_t(-1) / sizeof(_Tp);
        -:  138:#endif
        -:  139:      }
------------------
_ZNK9__gnu_cxx13new_allocatorIN5Catch15ConsoleReporter13SummaryColumnEE8max_sizeEv:
    #####:  132:      max_size() const _GLIBCXX_USE_NOEXCEPT
        -:  133:      {
        -:  134:#if __PTRDIFF_MAX__ < __SIZE_MAX__
    #####:  135:	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
        -:  136:#else
        -:  137:	return size_t(-1) / sizeof(_Tp);
        -:  138:#endif
        -:  139:      }
------------------
_ZNK9__gnu_cxx13new_allocatorIN5Catch5Clara11CommandLineINS1_10ConfigDataEE3ArgEE8max_sizeEv:
       18:  132:      max_size() const _GLIBCXX_USE_NOEXCEPT
        -:  133:      {
        -:  134:#if __PTRDIFF_MAX__ < __SIZE_MAX__
       18:  135:	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
        -:  136:#else
        -:  137:	return size_t(-1) / sizeof(_Tp);
        -:  138:#endif
        -:  139:      }
------------------
_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8max_sizeEv:
       17:  132:      max_size() const _GLIBCXX_USE_NOEXCEPT
        -:  133:      {
        -:  134:#if __PTRDIFF_MAX__ < __SIZE_MAX__
       17:  135:	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
        -:  136:#else
        -:  137:	return size_t(-1) / sizeof(_Tp);
        -:  138:#endif
        -:  139:      }
------------------
        -:  140:
        -:  141:#if __cplusplus >= 201103L
        -:  142:      template<typename _Up, typename... _Args>
        -:  143:	void
      97*:  144:	construct(_Up* __p, _Args&&... __args)
        -:  145:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
      97*:  146:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
------------------
_ZN9__gnu_cxx13new_allocatorIPKN5Catch20IExceptionTranslatorEE9constructIS4_JRKS4_EEEvPT_DpOT0_:
    #####:  144:	construct(_Up* __p, _Args&&... __args)
        -:  145:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  146:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch3PtrINS1_8TestSpec7PatternEEEE9constructIS5_JRKS5_EEEvPT_DpOT0_:
        1:  144:	construct(_Up* __p, _Args&&... __args)
        -:  145:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
        1:  146:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch3PtrINS1_22CumulativeReporterBase4NodeINS1_12TestRunStatsENS4_INS1_14TestGroupStatsENS4_INS1_13TestCaseStatsENS3_11SectionNodeEEEEEEEEEE9constructISC_JRKSC_EEEvPT_DpOT0_:
    #####:  144:	construct(_Up* __p, _Args&&... __args)
        -:  145:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  146:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch3PtrINS1_22CumulativeReporterBase4NodeINS1_14TestGroupStatsENS4_INS1_13TestCaseStatsENS3_11SectionNodeEEEEEEEE9constructISA_JRKSA_EEEvPT_DpOT0_:
    #####:  144:	construct(_Up* __p, _Args&&... __args)
        -:  145:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  146:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch3PtrINS1_22CumulativeReporterBase4NodeINS1_13TestCaseStatsENS3_11SectionNodeEEEEEE9constructIS8_JRKS8_EEEvPT_DpOT0_:
    #####:  144:	construct(_Up* __p, _Args&&... __args)
        -:  145:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  146:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch14AssertionStatsEE9constructIS2_JRKS2_EEEvPT_DpOT0_:
    #####:  144:	construct(_Up* __p, _Args&&... __args)
        -:  145:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  146:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch3PtrINS1_22CumulativeReporterBase11SectionNodeEEEE9constructIS5_JRKS5_EEEvPT_DpOT0_:
    #####:  144:	construct(_Up* __p, _Args&&... __args)
        -:  145:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  146:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch11SectionInfoEE9constructIS2_JRKS2_EEEvPT_DpOT0_:
       12:  144:	construct(_Up* __p, _Args&&... __args)
        -:  145:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
       12:  146:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch3PtrINS1_18IStreamingReporterEEEE9constructIS4_JRKS4_EEEvPT_DpOT0_:
    #####:  144:	construct(_Up* __p, _Args&&... __args)
        -:  145:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  146:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
------------------
_ZN9__gnu_cxx13new_allocatorIPN5Catch14IGeneratorInfoEE9constructIS3_JRKS3_EEEvPT_DpOT0_:
    #####:  144:	construct(_Up* __p, _Args&&... __args)
        -:  145:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  146:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
------------------
_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9constructIS6_JS6_EEEvPT_DpOT0_:
       20:  144:	construct(_Up* __p, _Args&&... __args)
        -:  145:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
       20:  146:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch3PtrINS1_16IReporterFactoryEEEE9constructIS4_JRKS4_EEEvPT_DpOT0_:
    #####:  144:	construct(_Up* __p, _Args&&... __args)
        -:  145:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  146:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch8TestCaseEE9constructIS2_JRKS2_EEEvPT_DpOT0_:
        1:  144:	construct(_Up* __p, _Args&&... __args)
        -:  145:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
        1:  146:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch14SectionEndInfoEE9constructIS2_JRKS2_EEEvPT_DpOT0_:
    #####:  144:	construct(_Up* __p, _Args&&... __args)
        -:  145:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  146:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch3PtrINS1_16TestCaseTracking8ITrackerEEEE9constructIS5_JRKS5_EEEvPT_DpOT0_:
        7:  144:	construct(_Up* __p, _Args&&... __args)
        -:  145:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
        7:  146:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch11MessageInfoEE9constructIS2_JRKS2_EEEvPT_DpOT0_:
    #####:  144:	construct(_Up* __p, _Args&&... __args)
        -:  145:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  146:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
------------------
_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9constructIS6_JRKS6_EEEvPT_DpOT0_:
    #####:  144:	construct(_Up* __p, _Args&&... __args)
        -:  145:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  146:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch8TestSpec6FilterEE9constructIS3_JRKS3_EEEvPT_DpOT0_:
        1:  144:	construct(_Up* __p, _Args&&... __args)
        -:  145:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
        1:  146:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
------------------
_ZN9__gnu_cxx13new_allocatorImE9constructImJRKmEEEvPT_DpOT0_:
    #####:  144:	construct(_Up* __p, _Args&&... __args)
        -:  145:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  146:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN5Catch14IGeneratorInfoEEEE9constructISD_JS2_IS8_SC_EEEEvPT_DpOT0_:
    #####:  144:	construct(_Up* __p, _Args&&... __args)
        -:  145:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  146:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch11SectionInfoEE9constructIS2_JS2_EEEvPT_DpOT0_:
        1:  144:	construct(_Up* __p, _Args&&... __args)
        -:  145:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
        1:  146:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch14SectionEndInfoEE9constructIS2_JS2_EEEvPT_DpOT0_:
    #####:  144:	construct(_Up* __p, _Args&&... __args)
        -:  145:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  146:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch11MessageInfoEE9constructIS2_JS2_EEEvPT_DpOT0_:
    #####:  144:	construct(_Up* __p, _Args&&... __args)
        -:  145:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  146:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch8TestSpec6FilterEE9constructIS3_JS3_EEEvPT_DpOT0_:
    #####:  144:	construct(_Up* __p, _Args&&... __args)
        -:  145:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  146:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5Catch8TestCaseEEE9constructIS3_JRKS3_EEEvPT_DpOT0_:
        1:  144:	construct(_Up* __p, _Args&&... __args)
        -:  145:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
        1:  146:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS7_JS7_EEEvPT_DpOT0_:
    #####:  144:	construct(_Up* __p, _Args&&... __args)
        -:  145:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  146:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS7_JRKS7_EEEvPT_DpOT0_:
       17:  144:	construct(_Up* __p, _Args&&... __args)
        -:  145:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
       17:  146:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN5Catch8TagAliasEEEE9constructISC_JS2_IS8_SB_EEEEvPT_DpOT0_:
    #####:  144:	construct(_Up* __p, _Args&&... __args)
        -:  145:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  146:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch14AssertionStatsEE9constructIS2_JS2_EEEvPT_DpOT0_:
    #####:  144:	construct(_Up* __p, _Args&&... __args)
        -:  145:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  146:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN5Catch18IGeneratorsForTestEEEE9constructISD_JS2_IS8_SC_EEEEvPT_DpOT0_:
    #####:  144:	construct(_Up* __p, _Args&&... __args)
        -:  145:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  146:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN5Catch3PtrINSA_16IReporterFactoryEEEEEE9constructISE_JS2_IS8_SD_EEEEvPT_DpOT0_:
        4:  144:	construct(_Up* __p, _Args&&... __args)
        -:  145:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
        4:  146:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch5Clara6Parser5TokenEE9constructIS4_JRKS4_EEEvPT_DpOT0_:
    #####:  144:	construct(_Up* __p, _Args&&... __args)
        -:  145:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  146:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN5Catch7TagInfoEEEE9constructISC_JS2_IS8_SB_EEEEvPT_DpOT0_:
    #####:  144:	construct(_Up* __p, _Args&&... __args)
        -:  145:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  146:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch5Clara11CommandLineINS1_10ConfigDataEE3ArgEE9constructIS6_JS6_EEEvPT_DpOT0_:
       26:  144:	construct(_Up* __p, _Args&&... __args)
        -:  145:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
       26:  146:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch15ConsoleReporter13SummaryColumnEE9constructIS3_JS3_EEEvPT_DpOT0_:
    #####:  144:	construct(_Up* __p, _Args&&... __args)
        -:  145:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  146:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
------------------
_ZN9__gnu_cxx13new_allocatorIPN5Catch16TestCaseTracking8ITrackerEE9constructIS4_JS4_EEEvPT_DpOT0_:
        6:  144:	construct(_Up* __p, _Args&&... __args)
        -:  145:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
        6:  146:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch5Clara6Parser5TokenEE9constructIS4_JS4_EEEvPT_DpOT0_:
    #####:  144:	construct(_Up* __p, _Args&&... __args)
        -:  145:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  146:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
------------------
        -:  147:
        -:  148:      template<typename _Up>
        -:  149:	void
      42*:  150:	destroy(_Up* __p)
        -:  151:	noexcept(std::is_nothrow_destructible<_Up>::value)
      42*:  152:	{ __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch14AssertionStatsEE7destroyIS2_EEvPT_:
    #####:  150:	destroy(_Up* __p)
        -:  151:	noexcept(std::is_nothrow_destructible<_Up>::value)
    #####:  152:	{ __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorIPN5Catch16TestCaseTracking8ITrackerEE7destroyIS4_EEvPT_:
        6:  150:	destroy(_Up* __p)
        -:  151:	noexcept(std::is_nothrow_destructible<_Up>::value)
        6:  152:	{ __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch11SectionInfoEE7destroyIS2_EEvPT_:
       13:  150:	destroy(_Up* __p)
        -:  151:	noexcept(std::is_nothrow_destructible<_Up>::value)
       13:  152:	{ __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch3PtrINS1_22CumulativeReporterBase11SectionNodeEEEE7destroyIS5_EEvPT_:
    #####:  150:	destroy(_Up* __p)
        -:  151:	noexcept(std::is_nothrow_destructible<_Up>::value)
    #####:  152:	{ __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7destroyIS6_EEvPT_:
        1:  150:	destroy(_Up* __p)
        -:  151:	noexcept(std::is_nothrow_destructible<_Up>::value)
        1:  152:	{ __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorImE7destroyImEEvPT_:
    #####:  150:	destroy(_Up* __p)
        -:  151:	noexcept(std::is_nothrow_destructible<_Up>::value)
    #####:  152:	{ __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch8TestSpec6FilterEE7destroyIS3_EEvPT_:
    #####:  150:	destroy(_Up* __p)
        -:  151:	noexcept(std::is_nothrow_destructible<_Up>::value)
    #####:  152:	{ __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch11MessageInfoEE7destroyIS2_EEvPT_:
    #####:  150:	destroy(_Up* __p)
        -:  151:	noexcept(std::is_nothrow_destructible<_Up>::value)
    #####:  152:	{ __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch3PtrINS1_16TestCaseTracking8ITrackerEEEE7destroyIS5_EEvPT_:
    #####:  150:	destroy(_Up* __p)
        -:  151:	noexcept(std::is_nothrow_destructible<_Up>::value)
    #####:  152:	{ __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch14SectionEndInfoEE7destroyIS2_EEvPT_:
    #####:  150:	destroy(_Up* __p)
        -:  151:	noexcept(std::is_nothrow_destructible<_Up>::value)
    #####:  152:	{ __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch8TestCaseEE7destroyIS2_EEvPT_:
    #####:  150:	destroy(_Up* __p)
        -:  151:	noexcept(std::is_nothrow_destructible<_Up>::value)
    #####:  152:	{ __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch3PtrINS1_16IReporterFactoryEEEE7destroyIS4_EEvPT_:
    #####:  150:	destroy(_Up* __p)
        -:  151:	noexcept(std::is_nothrow_destructible<_Up>::value)
    #####:  152:	{ __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorIPKN5Catch20IExceptionTranslatorEE7destroyIS4_EEvPT_:
    #####:  150:	destroy(_Up* __p)
        -:  151:	noexcept(std::is_nothrow_destructible<_Up>::value)
    #####:  152:	{ __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorIPN5Catch14IGeneratorInfoEE7destroyIS3_EEvPT_:
    #####:  150:	destroy(_Up* __p)
        -:  151:	noexcept(std::is_nothrow_destructible<_Up>::value)
    #####:  152:	{ __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch3PtrINS1_18IStreamingReporterEEEE7destroyIS4_EEvPT_:
    #####:  150:	destroy(_Up* __p)
        -:  151:	noexcept(std::is_nothrow_destructible<_Up>::value)
    #####:  152:	{ __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN5Catch14IGeneratorInfoEEEE7destroyISD_EEvPT_:
    #####:  150:	destroy(_Up* __p)
        -:  151:	noexcept(std::is_nothrow_destructible<_Up>::value)
    #####:  152:	{ __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch3PtrINS1_22CumulativeReporterBase4NodeINS1_13TestCaseStatsENS3_11SectionNodeEEEEEE7destroyIS8_EEvPT_:
    #####:  150:	destroy(_Up* __p)
        -:  151:	noexcept(std::is_nothrow_destructible<_Up>::value)
    #####:  152:	{ __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch3PtrINS1_22CumulativeReporterBase4NodeINS1_14TestGroupStatsENS4_INS1_13TestCaseStatsENS3_11SectionNodeEEEEEEEE7destroyISA_EEvPT_:
    #####:  150:	destroy(_Up* __p)
        -:  151:	noexcept(std::is_nothrow_destructible<_Up>::value)
    #####:  152:	{ __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch3PtrINS1_22CumulativeReporterBase4NodeINS1_12TestRunStatsENS4_INS1_14TestGroupStatsENS4_INS1_13TestCaseStatsENS3_11SectionNodeEEEEEEEEEE7destroyISC_EEvPT_:
    #####:  150:	destroy(_Up* __p)
        -:  151:	noexcept(std::is_nothrow_destructible<_Up>::value)
    #####:  152:	{ __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch3PtrINS1_8TestSpec7PatternEEEE7destroyIS5_EEvPT_:
    #####:  150:	destroy(_Up* __p)
        -:  151:	noexcept(std::is_nothrow_destructible<_Up>::value)
    #####:  152:	{ __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch5Clara6Parser5TokenEE7destroyIS4_EEvPT_:
    #####:  150:	destroy(_Up* __p)
        -:  151:	noexcept(std::is_nothrow_destructible<_Up>::value)
    #####:  152:	{ __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch15ConsoleReporter13SummaryColumnEE7destroyIS3_EEvPT_:
    #####:  150:	destroy(_Up* __p)
        -:  151:	noexcept(std::is_nothrow_destructible<_Up>::value)
    #####:  152:	{ __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiN5Catch5Clara11CommandLineINS4_10ConfigDataEE3ArgEEEE7destroyISA_EEvPT_:
    #####:  150:	destroy(_Up* __p)
        -:  151:	noexcept(std::is_nothrow_destructible<_Up>::value)
    #####:  152:	{ __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorIN5Catch5Clara11CommandLineINS1_10ConfigDataEE3ArgEE7destroyIS6_EEvPT_:
    #####:  150:	destroy(_Up* __p)
        -:  151:	noexcept(std::is_nothrow_destructible<_Up>::value)
    #####:  152:	{ __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7destroyIS7_EEvPT_:
       17:  150:	destroy(_Up* __p)
        -:  151:	noexcept(std::is_nothrow_destructible<_Up>::value)
       17:  152:	{ __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN5Catch7TagInfoEEEE7destroyISC_EEvPT_:
    #####:  150:	destroy(_Up* __p)
        -:  151:	noexcept(std::is_nothrow_destructible<_Up>::value)
    #####:  152:	{ __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5Catch8TestCaseEEE7destroyIS3_EEvPT_:
        1:  150:	destroy(_Up* __p)
        -:  151:	noexcept(std::is_nothrow_destructible<_Up>::value)
        1:  152:	{ __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN5Catch3PtrINSA_16IReporterFactoryEEEEEE7destroyISE_EEvPT_:
        4:  150:	destroy(_Up* __p)
        -:  151:	noexcept(std::is_nothrow_destructible<_Up>::value)
        4:  152:	{ __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN5Catch8TagAliasEEEE7destroyISC_EEvPT_:
    #####:  150:	destroy(_Up* __p)
        -:  151:	noexcept(std::is_nothrow_destructible<_Up>::value)
    #####:  152:	{ __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN5Catch18IGeneratorsForTestEEEE7destroyISD_EEvPT_:
    #####:  150:	destroy(_Up* __p)
        -:  151:	noexcept(std::is_nothrow_destructible<_Up>::value)
    #####:  152:	{ __p->~_Up(); }
------------------
        -:  153:#else
        -:  154:      // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  155:      // 402. wrong new expression in [some_] allocator::construct
        -:  156:      void
        -:  157:      construct(pointer __p, const _Tp& __val)
        -:  158:      { ::new((void *)__p) _Tp(__val); }
        -:  159:
        -:  160:      void
        -:  161:      destroy(pointer __p) { __p->~_Tp(); }
        -:  162:#endif
        -:  163:
        -:  164:      template<typename _Up>
        -:  165:	friend bool
        -:  166:	operator==(const new_allocator&, const new_allocator<_Up>&)
        -:  167:	_GLIBCXX_NOTHROW
        -:  168:	{ return true; }
        -:  169:
        -:  170:      template<typename _Up>
        -:  171:	friend bool
        -:  172:	operator!=(const new_allocator&, const new_allocator<_Up>&)
        -:  173:	_GLIBCXX_NOTHROW
        -:  174:	{ return false; }
        -:  175:    };
        -:  176:
        -:  177:_GLIBCXX_END_NAMESPACE_VERSION
        -:  178:} // namespace
        -:  179:
        -:  180:#endif
